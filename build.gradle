buildscript {
    ext {
        aptVersion = '0.10'
        assertjVersion = '3.8.0'
        hibernateVersion = '5.2.12.Final'
        kotlinVersion = '1.2.10'
        mapStructVersion = '1.2.0.Final'
        mockitoVersion = '2.11.0'
        springBootVersion = '1.5.9.RELEASE'
        swaggerVersion = '2.7.0'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "net.ltgt.gradle:gradle-apt-plugin:${aptVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'net.ltgt.apt'
apply plugin: "kotlin-jpa"

group = 'com.github.nowakprojects'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile('com.h2database:h2')
    compile('mysql:mysql-connector-java')
    //Hibernate
    compile group: 'org.hibernate', name: 'hibernate-core', version: "$hibernateVersion"
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: "$hibernateVersion"
    //Swagger 2
    compile("io.springfox:springfox-swagger2:${swaggerVersion}")
    compile("io.springfox:springfox-swagger-ui:${swaggerVersion}")
    //MapStruct
    compile("org.mapstruct:mapstruct-jdk8:${mapStructVersion}")
    apt "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    compileOnly "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    //Dependencies for testing
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile "org.assertj:assertj-core:${assertjVersion}"
    testCompile ("org.mockito:mockito-core:${mockitoVersion}")
}

